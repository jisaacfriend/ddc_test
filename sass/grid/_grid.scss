// Number of columns for the framework
$gutter: 15px;
$columns: 12;

$breakpoints: (
        'lg',
        'med',
        'sm',
        'sml'
    );
$pagebreaks: (
        '',
        'screen and (min-width: 768px) and (max-width: 980px)',
        'screen and (max-width: 767px)',
        'screen and (min-width: 480px) and (max-width: 767px)'
    );
$setfullwidth: (
        '',
        '[class*="lg-col-"]',
        '[class*="lg-col-"], [class*="med-col-"]',
        ''
    );

// Grid builder
@mixin gridBuilder($a) {
    // cycle through the $columns for first part of fraction
    @for $i from 1 through $columns {
        // cycle through the $columns for second part of fraction
        @for $j from $i through $columns {
            // create dynamic extends
            $temp: #{round(($i/$j)*1000)};
            // Makes new extend if lowest common denominator
            @if (gcd($j,$i) == 1) {
                %#{$a}-#{$temp}-width { width: 100% * ($i/$j); }
            }
            // Extend class if same name
            .#{$a}-col-#{$i}-#{$j} {
                @extend %#{$a}-#{$temp}-width;
            }
        }
    }
}

/* #Box-Sizing
================================================== */

*, *:before, *:after {
  @include vendor-prefix(box-sizing, border-box);
}

/* #Clearing
================================================== */

.row,
.grid,
.clearfix {
  &:before,
  &:after {
      content: "";
      display: table;
      clear: both;
  }
}

/* #Default Grid Utility Classes
================================================== */
[class*="col-"] {
    float: left;
    padding-right: $gutter;
    padding-bottom: $gutter;
}

.left {float: left;}
.right {float: right;}

.row {
    padding-top: $gutter;
    padding-left: $gutter;
}

.row + .row {padding-top: 0;}

.grid {padding: $gutter;}

.no-padding {padding: 0;}
.lg-no-padding {padding: 0;}

/* #Default Grid
================================================== */
// for each size prefix in $breakpoints
@for $t from 1 through length($breakpoints) {
  $size: nth($breakpoints,$t);
  $mediaQuery: nth($pagebreaks,$t);
  $test: nth($setfullwidth,$t);
  @if ($t == (length($breakpoints))) {
    @media #{$mediaQuery} {
      @include gridBuilder($size);
    }
  } @else if ($t > 1) {
    @media #{$mediaQuery} {
      #{$test} {width: 100%;}
      @include gridBuilder($size);
    }
  } @else {
    @include gridBuilder($size);
  }
}